language: c
dist: trusty
sudo: true
# Based from: https://github.com/greghendershott/travis-racket

env:
  global:
    # Supply a global RACKET_DIR environment variable. This is where
    # Racket will be installed. A good idea is to use ~/racket because
    # that doesn't require sudo to install and is therefore compatible
    # with Travis CI's newer container infrastructure.
    - RACKET_DIR=~/racket
  matrix:
    # Supply at least one RACKET_VERSION environment variable. This is
    # used by the install-racket.sh script (run at before_install,
    # below) to select the version of Racket to download and install.
    #
    # Supply more than one RACKET_VERSION (as in the example below) to
    # create a Travis-CI build matrix to test against multiple Racket
    # versions.
    # - RACKET_VERSION=6.8
    # - RACKET_VERSION=RELEASE
    # - RACKET_VERSION=6.9
     - RACKET_VERSION=6.10
     - RACKET_VERSION=HEAD

matrix:
  include:
   - os: linux
     dist: trusty
     sudo: true
   - os: osx
  allow_failures:
   - env: RACKET_VERSION=HEAD
   - os: osx
  fast_finish: true

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo cat .travis-scripts/setup-linux.sh | bash; fi
  # racket
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then git clone https://github.com/greghendershott/travis-racket.git ~/travis-racket; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cat ~/travis-racket/install-racket.sh | bash; fi # pipe to bash not sh!
  - export PATH="${RACKET_DIR}/bin:${PATH}" #install-racket.sh can't set for us
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install racket; fi
  # xvfb, enables gtk
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export DISPLAY=:99.0; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sh -e /etc/init.d/xvfb start; fi
  - sleep 3 # give xvfb some time to start

install:
 - raco pkg install --deps search-auto -n video

# Here supply steps such as raco make, raco test, etc.  You can run
# `raco pkg install --deps search-auto` to install any required
# packages without it getting stuck on a confirmation prompt.
script:
 - raco test -p video

after_success:
 - raco setup --check-pkg-deps --pkgs video
 - raco pkg install --deps search-auto cover cover-codecov cover-coveralls
 - raco cover -v -b -f codecov -f coveralls -d $TRAVIS_BUILD_DIR/coverage .
 - raco pkg install --deps search-auto doc-coverage
 - raco doc-coverage video/base
